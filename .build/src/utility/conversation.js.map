{
  "version": 3,
  "sources": ["../../../src/utility/conversation.ts"],
  "sourcesContent": ["import { getData } from \"./googleSheet\";\n\nconst questions: { [key: string]: string[] } = {}\nconst keywords: { [key: string]: string[] } = {}\n\nconst SPREADSHEET_ID = \"1SzgR3jF6A--5g3R2gA2AUBI32LBaaJ2_Ny5ypFhrzMU\"\nconst FULLMATCH_ID = \"0\"\nconst CONTAIN_ID = \"485506954\"\nconst SHEET_API_KEY_PATH = process.env.SHEET_API_KEY_PATH;\n\nexport async function fetchAnswers() {\n    for (const key in questions) {\n        delete questions[key];\n    }\n\n    for (const key in keywords) {\n        delete keywords[key];\n    }\n\n    getData(SPREADSHEET_ID, FULLMATCH_ID, SHEET_API_KEY_PATH)\n        .then(response => response.forEach(row => questions[row[0]] = row.slice(1)));\n    getData(SPREADSHEET_ID, CONTAIN_ID, SHEET_API_KEY_PATH)\n        .then(response => response.forEach(row => keywords[row[0]] = row.slice(1)));\n}\n\nexport function tackleQuestion(message: string): string {\n    var answer = \"\";\n    var hit = 0;\n    for (const key in keywords) {\n        if (message.includes(key)) {\n            const value = keywords[key];\n            answer = value[Math.floor(Math.random() * value.length)];\n            hit++;\n        }\n    }\n\n    if (hit == 0) {\n        for (const key in questions) {\n            if (message == key) {\n                const value = questions[key];\n                answer = value[Math.floor(Math.random() * value.length)];\n                break;\n            }\n        }\n    } else if (hit == 1) {\n        for (const key in questions) {\n            if (message.includes(key)) {\n                answer = \"\";\n                break;\n            }\n        }\n    } else {\n        answer = \"\";\n    }\n\n\n    return answer;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAExB,MAAM,YAAyC;AAC/C,MAAM,WAAwC;AAE9C,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,aAAa;AACnB,MAAM,qBAAqB,QAAQ,IAAI;AAEvC,8BAAqC;AACjC,aAAW,OAAO,WAAW;AACzB,WAAO,UAAU;AAAA;AAGrB,aAAW,OAAO,UAAU;AACxB,WAAO,SAAS;AAAA;AAGpB,kCAAQ,gBAAgB,cAAc,oBACjC,KAAK,cAAY,SAAS,QAAQ,SAAO,UAAU,IAAI,MAAM,IAAI,MAAM;AAC5E,kCAAQ,gBAAgB,YAAY,oBAC/B,KAAK,cAAY,SAAS,QAAQ,SAAO,SAAS,IAAI,MAAM,IAAI,MAAM;AAAA;AAGxE,wBAAwB,SAAyB;AACpD,MAAI,SAAS;AACb,MAAI,MAAM;AACV,aAAW,OAAO,UAAU;AACxB,QAAI,QAAQ,SAAS,MAAM;AACvB,YAAM,QAAQ,SAAS;AACvB,eAAS,MAAM,KAAK,MAAM,KAAK,WAAW,MAAM;AAChD;AAAA;AAAA;AAIR,MAAI,OAAO,GAAG;AACV,eAAW,OAAO,WAAW;AACzB,UAAI,WAAW,KAAK;AAChB,cAAM,QAAQ,UAAU;AACxB,iBAAS,MAAM,KAAK,MAAM,KAAK,WAAW,MAAM;AAChD;AAAA;AAAA;AAAA,aAGD,OAAO,GAAG;AACjB,eAAW,OAAO,WAAW;AACzB,UAAI,QAAQ,SAAS,MAAM;AACvB,iBAAS;AACT;AAAA;AAAA;AAAA,SAGL;AACH,aAAS;AAAA;AAIb,SAAO;AAAA;",
  "names": []
}
