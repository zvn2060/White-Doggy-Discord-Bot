{
  "version": 3,
  "sources": ["../../src/bot.ts"],
  "sourcesContent": ["import express, { Express, Request, Response } from \"express\"\nimport { Client, GatewayIntentBits, REST, Routes } from \"discord.js\";\nimport { exit } from 'node:process';\nimport ready from './events/ready';\nimport interactionCreate from './events/interactionCreate';\nimport messageCreate from './events/messageCreate';\n\n\n\nvar client: Client;\nvar rest: REST;\nconst app: Express = express();\nconst port = 5000;\n\nmain();\n\nfunction main() {\n\tconst BOT_TOKEN = process.env.DISCORD_BOT_TOKEN;\n\n\tif (!BOT_TOKEN) {\n\t\tconsole.error(\"Discord Bot Token Missing\");\n\t\texit(-1);\n\t}\n\n\tconsole.log(\"Bot is starting\");\n\n\tclient = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent] });\n\trest = new REST({ version: '10' }).setToken(BOT_TOKEN);\n\n\tready(client);\n\tinteractionCreate(client);\n\tmessageCreate(client);\n\n\tclient.login(BOT_TOKEN);\n}\n\n\n\n\nfunction listMembers(guild_id: string, limit: number) {\n\ttry {\n\t\tconst query = new URLSearchParams({ limit: `${limit}` })\n\t\treturn rest.get(Routes.guildMembers(guild_id), { query: query })\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\n\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,qBAAoD;AACpD,qBAAwD;AACxD,0BAAqB;AACrB,mBAAkB;AAClB,+BAA8B;AAC9B,2BAA0B;AAI1B,IAAI;AACJ,IAAI;AACJ,MAAM,MAAe;AACrB,MAAM,OAAO;AAEb;AAEA,gBAAgB;AACf,QAAM,YAAY,QAAQ,IAAI;AAE9B,MAAI,CAAC,WAAW;AACf,YAAQ,MAAM;AACd,kCAAK;AAAA;AAGN,UAAQ,IAAI;AAEZ,WAAS,IAAI,sBAAO,EAAE,SAAS,CAAC,iCAAkB,QAAQ,iCAAkB,eAAe,iCAAkB;AAC7G,SAAO,IAAI,oBAAK,EAAE,SAAS,QAAQ,SAAS;AAE5C,4BAAM;AACN,wCAAkB;AAClB,oCAAc;AAEd,SAAO,MAAM;AAAA;AAMd,qBAAqB,UAAkB,OAAe;AACrD,MAAI;AACH,UAAM,QAAQ,IAAI,gBAAgB,EAAE,OAAO,GAAG;AAC9C,WAAO,KAAK,IAAI,sBAAO,aAAa,WAAW,EAAE;AAAA,WACzC,OAAP;AACD,YAAQ,MAAM;AAAA;AAAA;",
  "names": []
}
